#!/usr/bin/with-contenv bashio

# Konfiguration aus config.yaml lesen
HOST=$(bashio::config 'sftp_host')
PORT=$(bashio::config 'sftp_port')
USER=$(bashio::config 'sftp_username')
PASS=$(bashio::config 'sftp_password')
DIR=$(bashio::config 'sftp_directory')
REFRESH=$(bashio::config 'refresh_interval')
MQTT_BROKER=$(bashio::config 'mqtt_broker')
MQTT_PORT=$(bashio::config 'mqtt_port')
MQTT_USERNAME=$(bashio::config 'mqtt_username')
MQTT_PASSWORD=$(bashio::config 'mqtt_password')

# Umgebungsvariablen für die Anwendung setzen
export SFTP_HOST=$HOST
export SFTP_PORT=$PORT
export SFTP_USER=$USER
export SFTP_PASS=$PASS
export SFTP_DIR=$DIR
export REFRESH_INTERVAL=$REFRESH
export MQTT_BROKER=$MQTT_BROKER
export MQTT_PORT=$MQTT_PORT
export MQTT_USERNAME=$MQTT_USERNAME
export MQTT_PASSWORD=$MQTT_PASSWORD

echo "▶️ Starte Webserver..."

# Beende alle laufenden Flask-Prozesse
pkill -f "python3 /app/main.py" || true

# Warte kurz, damit alle Prozesse beendet werden können
sleep 1

# Starte Flask-Server im Hintergrund
python3 /app/main.py &
FLASK_PID=$!

# Warte kurz, damit der Flask-Server Zeit hat zu starten
sleep 2

# Prüfe, ob der Flask-Server erfolgreich gestartet wurde
if ! ps -p $FLASK_PID > /dev/null; then
    echo "❌ Flask-Server konnte nicht gestartet werden!"
    exit 1
fi

echo "✅ Flask-Server erfolgreich gestartet (PID: $FLASK_PID)"

# Starte NGINX als Hauptprozess
exec nginx -c /etc/nginx/nginx.conf -g "daemon off;"
